(()=>{"use strict";class t{constructor(t,s="No date"){this.Name=t,this.Complete=!1,this.date=s}isCompleted(){this.Complete=!0}setDescription(t){this.Description=t}setDate(t){this.Date=t}}class s{constructor(t){this.name=t,this.task=[]}setTasks(t){this.task=t}push_task(s){this.task.push(new t(s))}remove_task(t){this.task.splice(t,1)}projectName(){return this.name}tasks(){return this.task}}class e{constructor(){this.projects=[],this.projects.push(new s("Inbox")),this.projects.push(new s("Today")),this.projects.push(new s("This Week"))}setProject(t){this.projects=t}addProject(t){if(this.projects.find((s=>s.projectName()===t)))return;let e=new s(t);return this.projects.push(e),e}findProject(t){return this.projects.find((s=>s.projectName()===t))}DeleteProject(t){if("Inbox"===t||"Today"===t||"This Week"===t)return;const s=this.projects.find((s=>s.projectName()===t));let e=this.projects.indexOf(s);this.projects.splice(e,1)}AllProjects(){return this.projects}}class o{static saveTodolist(t){localStorage.setItem("todolist",JSON.stringify(t))}static getTodoList(){const o=Object.assign(new e,JSON.parse(localStorage.getItem("todolist")));return o.setProject(o.AllProjects().map((t=>Object.assign(new s,t)))),o.AllProjects().forEach((s=>s.setTasks(s.tasks().map((s=>Object.assign(new t,s)))))),o}static saveNewProject(t){const s=o.getTodoList();s.addProject(t),o.saveTodolist(s)}static StoredeleteProject(t){const s=o.getTodoList();s.DeleteProject(t),o.saveTodolist(s)}static addNewTask(t,s){const e=o.getTodoList();e.findProject(t).push_task(s),localStorage.clear(),console.log(e),o.saveTodolist(e)}}localStorage.clear(),o.saveTodolist(new e),o.addNewTask("Inbox","Repl")})();